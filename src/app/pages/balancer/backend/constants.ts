import {
  HANDLE_CLICK_BUTTON,
  PARSE_REQUEST_HEADER,
} from "../../../@share/constants";
import { environment } from "../../../../environments/environment";
import { parse } from "path";

export const FORM_JSON_DEFAULT = {
  components: [
    {
      autofocus: false,
      input: true,
      tableView: true,
      label: "Physical Server",
      key: "haproxyId",
      placeholder: "The server you want to config",
      data: {
        values: [],
      },
      dataSrc: "values",
      valueProperty: "",
      defaultValue: "",
      refreshOn: "",
      filter: "",
      authenticate: false,
      template: "<span>{{ item.label }}-{{item.location}}</span>",
      multiple: false,
      protected: false,
      unique: false,
      persistent: true,
      hidden: false,
      clearOnHide: true,
      validate: {
        required: true,
      },
      type: "select",
      $$hashKey: "object:526",
      labelPosition: "top",
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
    },
    {
      clearOnHide: false,
      label: "Columns",
      input: false,
      tableView: false,
      key: "column1",
      columns: [
        {
          components: [
            {
              autofocus: false,
              input: true,
              tableView: true,
              inputType: "text",
              inputMask: "",
              label: "Name",
              key: "backendName",
              placeholder: "exam: K8s",
              prefix: "",
              suffix: "",
              multiple: false,
              defaultValue: "",
              protected: false,
              unique: false,
              persistent: true,
              hidden: false,
              clearOnHide: true,
              spellcheck: true,
              validate: {
                required: true,
                minLength: "",
                maxLength: "",
                pattern: "",
                custom: "",
                customPrivate: false,
              },
              conditional: {
                show: "",
                when: null,
                eq: "",
              },
              type: "textfield",
              labelPosition: "top",
              inputFormat: "plain",
              tags: [],
              properties: {},
            },
            {
              autofocus: false,
              input: true,
              tableView: true,
              inputType: "number",
              label: "Timeout",
              key: "timeout",
              placeholder: "exam: 1000",
              prefix: "",
              suffix: "",
              defaultValue: "",
              protected: false,
              persistent: true,
              hidden: false,
              clearOnHide: true,
              validate: {
                required: false,
                min: "",
                max: "",
                step: "any",
                integer: "",
                multiple: "",
                custom: "",
              },
              type: "number",
              labelPosition: "top",
              tags: [],
              conditional: {
                show: "",
                when: null,
                eq: "",
              },
              properties: {},
            },
          ],
          width: 6,
          offset: 0,
          push: 0,
          pull: 0,
        },
        {
          components: [
            {
              autofocus: false,
              input: true,
              tableView: true,
              label: "Balance",
              key: "balance",
              placeholder: "Balance algorithms",
              data: {
                values: [
                  {
                    value: "roundrobin",
                    label: "Round-robin",
                  },
                  {
                    value: "leastconn",
                    label: "Leastconn",
                  },
                  {
                    value: "source",
                    label: "Source",
                  },
                ],
                json: "",
                url: "",
                resource: "",
                custom: "",
              },
              dataSrc: "values",
              valueProperty: "",
              defaultValue: "",
              refreshOn: "",
              filter: "",
              authenticate: false,
              template: "<span>{{ item.label }}</span>",
              multiple: false,
              protected: false,
              unique: false,
              persistent: true,
              hidden: false,
              clearOnHide: true,
              validate: {
                required: false,
              },
              type: "select",
              labelPosition: "top",
              tags: [],
              conditional: {
                show: "",
                when: null,
                eq: "",
              },
              properties: {},
            },
            {
              autofocus: false,
              input: true,
              tableView: true,
              inputType: "radio",
              label: "Unit",
              key: "unitTimeOut",
              values: [
                {
                  value: "m",
                  label: "m",
                  shortcut: "",
                },
                {
                  value: "s",
                  label: "s",
                  shortcut: "",
                },
                {
                  value: "ms",
                  label: "ms",
                  shortcut: "",
                },
                {
                  value: "us",
                  label: "us",
                  shortcut: "",
                },
                {
                  value: "h",
                  label: "h",
                  shortcut: "",
                },
                {
                  value: "d",
                  label: "d",
                  shortcut: "",
                },
              ],
              defaultValue: "m",
              protected: false,
              fieldSet: false,
              persistent: true,
              hidden: false,
              clearOnHide: true,
              validate: {
                required: false,
                custom: "",
                customPrivate: false,
              },
              type: "radio",
              labelPosition: "top",
              optionsLabelPosition: "right",
              tags: [],
              conditional: {
                show: "",
                when: null,
                eq: "",
              },
              properties: {},
              inline: true,
            },
          ],
          width: 6,
          offset: 0,
          push: 0,
          pull: 0,
        },
      ],
      type: "columns",
      hideLabel: true,
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
    },
    {
      autofocus: false,
      input: true,
      tableView: true,
      label: "Mode",
      key: "mode",
      placeholder: "",
      data: {
        values: [
          {
            value: "http",
            label: "HTTP",
          },
          {
            value: "tcp",
            label: "TCP",
          },
          {
            value: "health",
            label: "HEALTH",
          },
        ],
        json: "",
        url: "",
        resource: "",
        custom: "",
      },
      dataSrc: "values",
      valueProperty: "",
      defaultValue: "",
      refreshOn: "",
      filter: "",
      authenticate: false,
      template: "<span>{{ item.label }}</span>",
      multiple: false,
      protected: false,
      unique: false,
      persistent: true,
      hidden: false,
      clearOnHide: true,
      validate: {
        required: false,
      },
      type: "select",
      labelPosition: "top",
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
    },
    {
      autofocus: false,
      input: true,
      tree: true,
      components: [
        {
          autofocus: false,
          input: true,
          tableView: false,
          label: "Options",
          key: "optionName",
          placeholder: "",
          data: {
            values: [
              {
                value: "httpclose",
                label: "Httpclose",
              },
              {
                value: "accept-invalid-http-response",
                label: "Option accept-invalid-http-response",
              },
              {
                value: "forwardfor",
                label: "Option forwardfor",
              },
            ],
            json: "",
            url: "",
            resource: "",
            custom: "",
          },
          dataSrc: "values",
          valueProperty: "",
          defaultValue: "",
          refreshOn: "",
          filter: "",
          authenticate: false,
          template: "<span>{{ item.label }}</span>",
          multiple: false,
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          bordered: false,
          validate: {
            required: true,
          },
          type: "select",
          labelPosition: "top",
          tags: [],
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          properties: {},
          inDataGrid: true,
        },
      ],
      tableView: false,
      label: "Option",
      key: "optionList",
      protected: false,
      persistent: true,
      hidden: false,
      clearOnHide: true,
      type: "datagrid",
      addAnotherPosition: "bottom",
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
      addAnother: "Add",
      hideLabel: true,
      customClass: "table-borderless",
    },
    // {
    //   autofocus: false,
    //   input: true,
    //   tree: true,
    //   components: [
    //     {
    //       autofocus: false,
    //       input: true,
    //       tableView: true,
    //       label: "ACL",
    //       key: "undefinedAccessControlListAcl",
    //       placeholder: "",
    //       data: {
    //         values: [],
    //       },
    //       dataSrc: "values",
    //       valueProperty: "",
    //       defaultValue: "",
    //       refreshOn: "",
    //       filter: "",
    //       authenticate: false,
    //       template: "<span>{{ item.label }}</span>",
    //       multiple: false,
    //       protected: false,
    //       unique: false,
    //       persistent: true,
    //       hidden: false,
    //       clearOnHide: true,
    //       validate: {
    //         required: false,
    //       },
    //       type: "select",
    //       $$hashKey: "object:5285",
    //       inDataGrid: true,
    //       labelPosition: "top",
    //       tags: [],
    //       conditional: {
    //         show: "",
    //         when: null,
    //         eq: "",
    //       },
    //       properties: {},
    //     },
    //   ],
    //   tableView: true,
    //   label: "Access Control List",
    //   key: "undefinedAccessControlList",
    //   protected: false,
    //   persistent: true,
    //   hidden: false,
    //   clearOnHide: true,
    //   type: "datagrid",
    //   addAnotherPosition: "bottom",
    //   $$hashKey: "object:4833",
    //   tags: [],
    //   conditional: {
    //     show: "",
    //     when: null,
    //     eq: "",
    //   },
    //   properties: {},
    //   addAnother: "add",
    //   hideLabel: true,
    //   customClass: "table-borderless",
    // },
    {
      autofocus: false,
      input: true,
      tree: true,
      components: [
        {
          autofocus: false,
          input: true,
          tableView: true,
          label: "Http rule",
          key: "ruleOption",
          placeholder: "Http rule option",
          data: {
            values: [
              {
                value: "set header",
                label: "Http set-header",
              },
              {
                value: "add header",
                label: "Http add-header",
              },
            ],
            json: "",
            url: "",
            resource: "",
            custom: "",
          },
          dataSrc: "values",
          valueProperty: "",
          defaultValue: "",
          refreshOn: "",
          filter: "",
          authenticate: false,
          template: "<span>{{ item.label }}</span>",
          multiple: false,
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          validate: {
            required: true,
          },
          type: "select",
          inDataGrid: true,
          labelPosition: "top",
          tags: [],
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          properties: {},
        },
        {
          autofocus: false,
          input: true,
          tableView: true,
          inputType: "text",
          inputMask: "",
          label: "Value",
          key: "value",
          placeholder: "exam: X-Forwarded-Proto https",
          prefix: "",
          suffix: "",
          multiple: false,
          defaultValue: "",
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          spellcheck: true,
          validate: {
            required: true,
            minLength: "",
            maxLength: "",
            pattern: "",
            custom: "",
            customPrivate: false,
          },
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          type: "textfield",
          $$hashKey: "object:7778",
          inDataGrid: true,
          labelPosition: "top",
          inputFormat: "plain",
          tags: [],
          properties: {},
          overlay: {
            width: "50",
          },
        },
        // {
        //   autofocus: false,
        //   input: true,
        //   inputType: "checkbox",
        //   tableView: true,
        //   label: "if",
        //   dataGridLabel: false,
        //   key: "conditionIf",
        //   defaultValue: false,
        //   protected: false,
        //   persistent: true,
        //   hidden: false,
        //   name: "",
        //   value: "",
        //   clearOnHide: true,
        //   validate: {
        //     required: false,
        //   },
        //   type: "checkbox",
        //   labelPosition: "right",
        //   $$hashKey: "object:12843",
        //   inDataGrid: true,
        //   hideLabel: false,
        //   tags: [],
        //   conditional: {
        //     show: "",
        //     when: null,
        //     eq: "",
        //   },
        //   properties: {},
        // },
        // {
        //   autofocus: false,
        //   input: true,
        //   inputType: "checkbox",
        //   tableView: true,
        //   label: "ul",
        //   dataGridLabel: false,
        //   key: "conditionUnless",
        //   defaultValue: false,
        //   protected: false,
        //   persistent: true,
        //   hidden: false,
        //   name: "",
        //   value: "",
        //   clearOnHide: true,
        //   validate: {
        //     required: false,
        //   },
        //   type: "checkbox",
        //   labelPosition: "right",
        //   $$hashKey: "object:13315",
        //   inDataGrid: true,
        //   hideLabel: false,
        //   tags: [],
        //   conditional: {
        //     show: "",
        //     when: null,
        //     eq: "",
        //   },
        //   properties: {},
        // },
        {
          autofocus: false,
          input: true,
          tableView: true,
          label: "condition",
          key: "condition",
          placeholder: "condition",
          data: {
            values: [
              {
                label: "if",
                value: "if",
              },
              {
                label: "unless",
                value: "unless",
              },
            ],
          },
          dataSrc: "values",
          valueProperty: "",
          defaultValue: "",
          refreshOn: "",
          filter: "",
          authenticate: false,
          template: "<span>{{ item.label }}</span>",
          multiple: false,
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          validate: {
            required: false,
          },
          type: "select",
          inDataGrid: true,
          labelPosition: "top",
          tags: [],
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          properties: {},
        },
        {
          autofocus: false,
          input: true,
          tableView: true,
          inputType: "text",
          inputMask: "",
          label: "Custom ACL",
          key: "customAcl",
          placeholder: "custom acl",
          prefix: "",
          suffix: "",
          multiple: false,
          defaultValue: "",
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          spellcheck: true,
          validate: {
            required: false,
            minLength: "",
            maxLength: "",
            pattern: "",
            custom: "",
            customPrivate: false,
          },
          conditional: {
            show: "true",
            when: "condition",
            eq: "",
          },
          type: "textfield",
          labelPosition: "top",
          inputFormat: "plain",
          tags: [],
          properties: {},
        },
        {
          autofocus: false,
          input: true,
          tableView: true,
          label: "Acl",
          key: "acl",
          placeholder: "Access control list",
          data: {
            values: [],
          },
          dataSrc: "values",
          valueProperty: "",
          defaultValue: "",
          refreshOn: "",
          filter: "",
          authenticate: false,
          template: "<span>{{ item.value.name }}</span>",
          multiple: false,
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          validate: {
            required: true,
          },
          type: "select",
          inDataGrid: true,
          labelPosition: "top",
          tags: [],
          conditional: {
            show: "false",
            when: "condition",
            eq: "",
          },

          properties: {},
          // customConditional: "show=(data['condition'] == 'if');",
        },
      ],
      tableView: true,
      label: "Http Rules",
      key: "httpList",
      protected: false,
      persistent: true,
      hidden: false,
      clearOnHide: true,
      type: "datagrid",
      addAnotherPosition: "bottom",
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
      addAnother: "Add",
      hideLabel: true,
      customClass: "table-borderless",
    },
    {
      autofocus: false,
      input: true,
      tree: true,
      components: [
        {
          autofocus: false,
          input: true,
          tableView: true,
          inputType: "text",
          inputMask: "",
          label: "Server name",
          key: "serverName",
          placeholder: "exam: k8s_sso_69",
          prefix: "",
          suffix: "",
          multiple: false,
          defaultValue: "",
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          spellcheck: true,
          validate: {
            required: true,
            minLength: "",
            maxLength: "",
            pattern: "",
            custom: "",
            customPrivate: false,
          },
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          type: "textfield",
          inDataGrid: true,
          labelPosition: "top",
          inputFormat: "plain",
          tags: [],
          properties: {},
        },
        {
          autofocus: false,
          input: true,
          tableView: true,
          inputType: "text",
          inputMask: "",
          label: "Value(ip:port other thing)",
          key: "serverValue",
          placeholder: "69.69.69.69:6969 check",
          prefix: "",
          suffix: "",
          multiple: false,
          defaultValue: "",
          protected: false,
          unique: false,
          persistent: true,
          hidden: false,
          clearOnHide: true,
          spellcheck: true,
          validate: {
            required: true,
            minLength: "",
            maxLength: "",
            pattern: "",
            custom: "",
            customPrivate: false,
          },
          conditional: {
            show: "",
            when: null,
            eq: "",
          },
          type: "textfield",
          $$hashKey: "object:15294",
          inDataGrid: true,
          labelPosition: "top",
          inputFormat: "plain",
          tags: [],
          properties: {},
        },
      ],
      tableView: true,
      label: "Server",
      key: "serverList",
      protected: false,
      persistent: true,
      hidden: false,
      clearOnHide: true,
      type: "datagrid",
      addAnotherPosition: "bottom",
      tags: [],
      conditional: {
        show: "",
        when: null,
        eq: "",
      },
      properties: {},
      addAnother: "Add",
      hideLabel: true,

      customClass: "table-borderless",
    },
    {
      type: "button",
      theme: "success",
      disableOnInvalid: true,
      action: "event",
      rightIcon: "",
      leftIcon: "",
      size: "md",
      key: "saveButton",
      tableView: false,
      label: "Save",
      input: true,
      event: "onSave",
    },
  ],
  display: "form",
  page: 0,
};

export const BACKEND_DB = {
  BACKEND: {
    TABLE_NAME: "Backend",
    TITLE: "Backend",
  },
  FIELD_NAME: {
    OBJECT_ID: "objectId",
    BACKEND_NAME: "name",
    HASERVER: "serverHa",
    ACL: "acl",
    ACL_CUSTOM: "aclCustom",
    TIMEOUT: "timeout",
    MODE: "mode",
    SERVER: "server",
    HTTP_REQUEST: "httpRequest",
    BALANCE: "balance",
    OPTION: "option",
    CREATED_AT: "createdAt",
    UPDATED_AT: "updatedAt",
  },
};
export function getTitle(title: string) {
  return {
    ADD: `THÊM ${title.toUpperCase()}`,
    DETAILS: `CHI TIẾT ${title.toUpperCase()}`,
  };
}

export function getHearder(placeTypeName: string) {
  return [
    { headerName: `TÊN ${placeTypeName.toUpperCase()}`, field: "name" },
    {
      headerName: `HA SERVER`,
      field: `serverHa.name`,
      width: 150,
      minWidth: 100,
      maxWidth: 250,
    },
    {
      headerName: "Mode",
      field: "mode",
    },
    { headerName: "NGÀY TẠO", field: "createdAt" },
    { headerName: "NGÀY CẬP NHẬT", field: "updatedAt" },
    //{ headerName: "HIỆU LỰC", field: "validity.name" },
  ];
}

// export const BACKEND_FIELD_FORM = {
//   HA_SERVER: "haproxyId",
//   BACKEND_NAME: "backendName",
//   BALANCE: "balance",
//   TIMEOUT: "timeout",
//   TIMEOUT_UNIT: "unitTimeOut",
//   MODE: "mode",
//   OPTION_LIST: "optionList",
//   HTTP_LIST: "httpList",
//   SERVER_LIST: "serverList",
// };

export function parseToForm(parseOj: any) {
  return {
    objectId: parseOj.objectId,
    haproxyId: parseOj.serverHa.objectId || null,
    backendName: parseOj.name || null,
    balance: parseOj.balance || null,
    mode: parseOj.mode || null,
    timeout:
      parseOj.timeout != undefined ? parseOj.timeout.value.split(" ")[1] : null,
    unitTimeOut: parseOj.timeout != undefined ? parseOj.timeout.unit : "m",
    optionList: parseOj.option,
    httpList: parseOj.httpRequest,
    serverList: parseOj.server,
  };
}
